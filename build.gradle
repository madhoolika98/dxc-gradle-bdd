plugins {
    id 'java'
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.1.22"
}

group 'org.dxc'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

project.ext {
    cucumberVersion = '6.9.1'
}

cucumberReports {
    outputDir = file('build/')
    buildId = '1'
    reports = files('build/cucumber-report.json')
}
configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}
dependencies {
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.8.1'
    implementation group: 'io.cucumber', name: 'cucumber-testng', version: '7.8.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.5.0'
    testImplementation group: 'org.testng', name: 'testng', version: '7.6.1'
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    implementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.30'
}

//Running a Suite testSuite.xml
//gradle command for running the test suite - gradle clean executeTest
task executeTest(type: Test){ // we define a task with name ‘executeTest’
    useTestNG() {
        options {
        systemProperties(System.getProperties())
    }
        useDefaultListeners = true
        suites 'src/test/testDriver/testSuite.xml'
        testLogging.showStandardStreams = true
    }
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
    reports.html.enabled = false
}


// For Running a specific feature through command line
// Command - gradle cucumber -P tags=@contactUs
// To Run More than one Tag they all execute in the alphabetical order
// gradle cucumber -P tags="@contactUs or @careerPortal"
// Here contactUs is the tag name of the feature
def tags = (findProperty('tags') == null) ? 'not @Ignore' : findProperty('tags') + ' and not @Ignore'

task cucumber(type: Test) {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin',"html:build/cucumber-reports/cucumber-report.html",
                    '--plugin',"json:build/cucumber-report.json",
                    '--plugin',"rerun:build/cucumber-report.txt",
                    '--plugin','pretty',
                    '--glue', 'org.dxc.stepDefinitions',
                    '--tags', "${tags}",
                    'src/test/resources/features',
            ]
            systemProperties(System.getProperties())
        }
    }
}
